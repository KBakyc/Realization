<UserControl x:Class="InfoModule.Views.SignersDlgView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dto="clr-namespace:DataObjects;assembly=DataObjects"
             xmlns:controls="clr-namespace:CommonModule.Controls;assembly=CommonModule"
             >
    <Grid>
        <DockPanel>
            <Border DockPanel.Dock="Top">
                <DockPanel LastChildFill="False">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Button Command="{Binding AddSignerCommand}" Margin="3"
                                Style="{DynamicResource CommandButton}"
                                ToolTip="Добавить строку">
                            <Image Source="/InfoModule;component/Resources/add.png" />
                        </Button>
                        <Button Command="{Binding DeleteSignerCommand}" Margin="3"
                        Style="{DynamicResource CommandButton}"
                        ToolTip="Удалить строку">
                            <Image Source="/InfoModule;component/Resources/delete.png" />
                        </Button>
                        <Button Command="{Binding SaveChangesCommand}" Margin="3"
                        Style="{DynamicResource CommandButton}"
                        ToolTip="Сохранить изменения">
                            <Image Source="/InfoModule;component/Resources/apply.png"/>
                        </Button>
                    </StackPanel>
                    <GroupBox DockPanel.Dock="Right" Header="Направление" 
                              Padding="3" Margin="3"
                              VerticalAlignment="Bottom">
                        <ComboBox ItemsSource="{Binding Poups}" SelectedItem="{Binding SelectedPoup}"/>
                    </GroupBox>
                </DockPanel>
            </Border>
            <DataGrid ItemsSource="{Binding Signers}" AutoGenerateColumns="False"
                     CanUserAddRows="False" CanUserDeleteRows="False" ColumnHeaderHeight="40" 
                     IsSynchronizedWithCurrentItem="True" CanUserSortColumns="True"
                     SelectionMode="Single" SelectionUnit="FullRow" SelectedIndex="{Binding SelIndex}"
                     RowDetailsVisibilityMode="Collapsed"
                     Name="DgSigners"
                     Style="{DynamicResource DefaultDataGridStyle}"
                     SelectionChanged="DgSigners_SelectionChanged" EnableRowVirtualization="True">
                <DataGrid.Resources>
                    <Style TargetType="TextBlock" x:Key="WrappedTextBlock">
                        <Setter Property="Padding" Value="2,0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="ToolTip" 
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBox" x:Key="WrappedTextBox">
                        <Setter Property="Padding" Value="0"/>
                        <!--<Setter Property="Margin" Value="-1"/>-->
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="ToolTip" 
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                    <Style TargetType="ComboBox" x:Key="ComboStyle">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="IsEditable" Value="False"/>
                        <Setter Property="IsTextSearchEnabled" Value="False"/>
                        <Setter Property="Padding" Value="-1,0"/>
                        <Setter Property="Margin" Value="-1"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="IsDropDownOpen" Value="True"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="ToolTip" 
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="ComboBox" x:Key="SignTypeComboStyle" BasedOn="{StaticResource ComboStyle}">
                        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.SignTypes}"/>
                    </Style>
                    <Style TargetType="ComboBox" x:Key="SignTypeStyle" BasedOn="{StaticResource SignTypeComboStyle}">
                        <Setter Property="IsDropDownOpen" Value="False"/>                        
                    </Style>
                </DataGrid.Resources>
                <DataGrid.RowValidationRules>
                    <DataErrorValidationRule/>
                </DataGrid.RowValidationRules>
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <Grid x:Name="root" ToolTip="{Binding Error}" 
                                          Background="Transparent" Margin="-5,-10,-15,-10" Visibility="Hidden">
                                        <Path Data="M0,0L1,1M1,0L0,1" Stroke="Red" StrokeThickness="3" Stretch="Uniform" 
                                              Width="15" Height="15" 
                                              HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Path.Effect>
                                                <DropShadowEffect BlurRadius="2" ShadowDepth="2" />
                                            </Path.Effect>
                                        </Path>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsValid}" Value="False">
                                            <Setter TargetName="root" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>                        
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.RowValidationErrorTemplate>
                    <ControlTemplate>
                        <Grid/>
                    </ControlTemplate>
                </DataGrid.RowValidationErrorTemplate>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="BorderThickness" Value="1.5"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="MinHeight" Value="35"/>
                        <Setter Property="Background" Value="White"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="RoyalBlue"/>
                                <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding TrackingState}" Value="{x:Static dto:TrackingInfo.Updated}">
                                <Setter Property="Background" Value="YellowGreen" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TrackingState}" Value="{x:Static dto:TrackingInfo.Created}">
                                <Setter Property="Background" Value="GreenYellow" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TrackingState}" Value="{x:Static dto:TrackingInfo.Deleted}">
                                <Setter Property="Background" Value="Tomato" />
                            </DataTrigger>                           
                            <DataTrigger Binding="{Binding IsValid}" Value="False">
                                <Setter Property="BorderBrush" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Ф.И.О." Binding="{Binding Fio, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource WrappedTextBlock}" />
                    <DataGridTextColumn Header="Должность" Binding="{Binding Position, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                           ElementStyle="{StaticResource WrappedTextBlock}" 
                                           EditingElementStyle="{StaticResource WrappedTextBox}"
                                           Width="300">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Сокращённо" Binding="{Binding ShortPos, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                           ElementStyle="{StaticResource WrappedTextBlock}" 
                                           EditingElementStyle="{StaticResource WrappedTextBox}"
                                           Width="200"/>
                    <DataGridComboBoxColumn Header="Подпись" DisplayMemberPath="Value" Width="150"
                                      SelectedValuePath="Key"  SelectedValueBinding="{Binding SignTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               ElementStyle="{StaticResource SignTypeStyle}"
                                               EditingElementStyle="{StaticResource SignTypeComboStyle}">
                    </DataGridComboBoxColumn>
                    <DataGridTemplateColumn Header="Виды реализации" SortMemberPath="PoupsString" Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PoupsString}" ToolTip="{Binding FullPoupsString}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <controls:ComboBoxEx ItemsSource="{Binding Poups}" Style="{StaticResource ComboStyle}">
                                    <controls:ComboBoxEx.ItemContainerStyle>
                                        <Style TargetType="ComboBoxItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBoxItem">
                                                        <Border Background="{TemplateBinding Background}" Padding="2,1">
                                                            <ContentPresenter/>
                                                        </Border>                                                        
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsHighlighted" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:ComboBoxEx.ItemContainerStyle>
                                    <controls:ComboBoxEx.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Value, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </controls:ComboBoxEx.ItemTemplate>
                                    <controls:ComboBoxEx.SelectionBoxTemplate>
                                        <DataTemplate>
                                            <TextBlock DataContext="{Binding RelativeSource={RelativeSource AncestorType=controls:ComboBoxEx}, Path=DataContext}" 
                                                       Text="{Binding Path=PoupsString, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </controls:ComboBoxEx.SelectionBoxTemplate>
                                </controls:ComboBoxEx>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</UserControl>
