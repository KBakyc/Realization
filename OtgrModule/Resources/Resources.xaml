<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--DataGridErrorRowBackgroundBrush-->
    <LinearGradientBrush x:Key="DataGridErrorRowBackgroundBrush" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="Coral" Offset="0"/>
        <GradientStop Color="White" Offset=".8"/>
    </LinearGradientBrush>

    <!--Стиль таблицы приёма отгрузки-->
    <Style x:Key="P623DataGridStyle" TargetType="DataGrid">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DatagridColumnHeaderCustomTemplateStyle}"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsChecked}" Value="False">
                            <Setter Property="Background" Value="Pink"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding IsChecked}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="Maroon" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="5,2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль таблицы отбора отгрузки отгрузки-->
    <Style x:Key="SelectOtgrDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource P623DataGridStyle}">
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked}" Value="True">
                            <Setter Property="Background" Value="YellowGreen"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                            <Setter Property="Background" Value="Pink"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль таблицы приема отгрузки отгрузки из внешних источников-->
    <Style x:Key="GetExtOtgrDataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="IsSelected" Value="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                            <!--<Setter Property="Foreground" Value="Black" />-->
                        </Trigger>
                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                            <Setter Property="Background" Value="Pink"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding HasErrors}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="Maroon" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="5,2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DatagridColumnHeaderCustomTemplateStyle}"/>
    </Style>

    <!--Стиль ячейки таблицы архива отгрузки-->
    <Style x:Key="OtgrArcDataGridCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <!-- Highlight selected rows -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Lavender" />
                <Setter Property="Foreground" Value="MidnightBlue" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding IsInRealiz}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="DarkRed"/>
            </MultiDataTrigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!-- Add some padding around the contents of a cell -->
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Background}"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль таблицы архива отгрузки-->
    <Style x:Key="OtgrArcDataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="IsSelected" Value="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInRealiz}" Value="False">
                            <Setter Property="Background" Value="Ivory"/>
                            <Setter Property="Foreground" Value="Firebrick"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="RoyalBlue"/>
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle" Value="{StaticResource OtgrArcDataGridCellStyle}"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DatagridColumnHeaderCustomTemplateStyle}"/>        
    </Style>

    <!--Стиль таблицы сверки отгрузки с актом слива-->
    <Style x:Key="ShowAktSlivDataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FontSize" Value="12"/>                   
                    <Setter Property="Background" Value="Lavender"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Key.IsChecked}" Value="True">
                            <Setter Property="BorderBrush" Value="Firebrick"/>
                            <Setter Property="Background" Value="{StaticResource DataGridErrorRowBackgroundBrush}" />
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="Firebrick"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle" Value="{DynamicResource DefaultDataGridCellStyle}"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DatagridColumnHeaderCustomTemplateStyle}"/>
    </Style>

    <!--Стиль содержимого текстового столбца с правым выравниванием-->
    <Style x:Key="RightAlignStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <!--Стиль содержимого текстового столбца с центральным выравниванием-->
    <Style x:Key="CenterAlignStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

</ResourceDictionary>