<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converters="clr-namespace:CommonModule.Converters;assembly=CommonModule"
    xmlns:Controls="clr-namespace:CommonModule.Controls;assembly=CommonModule"
    xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Themes\Graphics.xaml"/>
        <ResourceDictionary Source="..\Themes\Buttons.xaml"/>
        <ResourceDictionary Source="..\Themes\Texts.xaml"/>
        <ResourceDictionary Source="..\Themes\TabItems.xaml"/>
        <ResourceDictionary Source="..\Themes\ToolkitControls.xaml"/>
        <ResourceDictionary Source="..\Themes\ScrollBar.xaml"/>
        <ResourceDictionary Source="..\Themes\SimpleExpanderStyle.xaml"/>
        <ResourceDictionary Source="..\Themes\ModuleMenu.xaml"/>
        <ResourceDictionary Source="..\Themes\ContentMenu.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--ItemWarningBackgroundBrush-->
    <LinearGradientBrush x:Key="ItemWarningBackgroundBrush" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="#0AFFFF00" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    
    <!--ItemErrorBackgroundBrush-->
    <LinearGradientBrush x:Key="ItemErrorBackgroundBrush" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="Salmon" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <!-- Кисти кнопок модулей -->
    <!--ToolBtnMouseOverBrush-->
    <LinearGradientBrush x:Key="ToolBtnMouseOverBrush" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="SlateBlue" Offset="0"/>
        <GradientStop Color="White" Offset=".5"/>
    </LinearGradientBrush>

    <!--PressedToolBtnBrush-->
    <LinearGradientBrush x:Key="PressedToolBtnBrush" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="CornflowerBlue" Offset=".5"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <!--PressedToolBtnStroke-->
    <LinearGradientBrush x:Key="PressedToolBtnStroke" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="Navy" Offset="0"/>
        <GradientStop Color="White" Offset=".5"/>
        <GradientStop Color="Navy" Offset="1"/>
    </LinearGradientBrush>

    <!--StartViewBackground-->
    <LinearGradientBrush x:Key="StartViewBackground" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="CornflowerBlue" Offset="1"/>
    </LinearGradientBrush>
      
    <!--ModuleToolbarBackground-->
    <LinearGradientBrush x:Key="ModuleToolbarBackground" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="WhiteSmoke" Offset="0"/>
        <GradientStop Color="Wheat" Offset="1"/>
        <!--<GradientStop Color="DarkOliveGreen" Offset="0.95"/>
        <GradientStop Color="DarkOliveGreen" Offset="1"/>-->
    </LinearGradientBrush>

    <!--ModuleBackground-->
    <LinearGradientBrush x:Key="ModuleBackground" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="AliceBlue" Offset="1"/>
    </LinearGradientBrush>

    <!--ModuleTitleBackground-->
    <LinearGradientBrush x:Key="ModuleTitleBackground" StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
        <GradientStop Color="DarkOliveGreen" Offset="0"/>
        <GradientStop Color="Olive" Offset="0.8"/>
        <GradientStop Color="YellowGreen" Offset="1"/>
    </LinearGradientBrush>

    <!--ModuleTitleForeground-->
    <SolidColorBrush x:Key="ModuleTitleForeground" Color="DarkOliveGreen"/>
    
    <!--ToolBtnMouseOverEffect-->
    <DropShadowEffect x:Key="ToolBtnMouseOverEffect" Color="Navy" Opacity=".5" BlurRadius="1" ShadowDepth=".5"/>
    
    <!--ToolBtnMouseOverTransform-->
    <ScaleTransform x:Key="ToolBtnMouseOverTransform"  ScaleX="1.05" ScaleY="1.05" CenterX="50" CenterY="50"/>

    <!--ToolButton-->
    <ControlTemplate x:Key="ToolButton" TargetType="Button">
        <Grid x:Name="Grid">
            <Rectangle x:Name="BackRect" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"
                       Fill="{TemplateBinding Background}" Cursor="Hand">
            </Rectangle>
            <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" Cursor="Hand"
                              Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="BackRect" 
                        Value="{DynamicResource ToolBtnMouseOverBrush}"/>
                <Setter Property="Effect" Value="{DynamicResource ToolBtnMouseOverEffect}"/>
                <Setter Property="RenderTransform" TargetName="BackRect" Value="{DynamicResource ToolBtnMouseOverTransform}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="BackRect" 
                        Value="{DynamicResource PressedToolBtnBrush}"/>
                <Setter Property="Stroke" TargetName="BackRect" 
                        Value="{DynamicResource PressedToolBtnStroke}"/>
                <Setter Property="Effect" Value="{x:Null}"/>
                <Setter Property="RenderTransform" TargetName="BackRect" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Кнопка запуска / открытия модуля-->
    <Style x:Key="StartModuleButton" TargetType="Button" BasedOn="{StaticResource ImageWithTextButton}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="160"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderBrush" Value="RoyalBlue"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!--Кнопка панели инструментов модуля-->
    <Style x:Key="ModuleToolButton" TargetType="Button" BasedOn="{StaticResource PopDownButton}">
        <Setter Property="TextBlock.FontSize" Value="8"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <!--Кнопка панели инструментов содержимого модуля-->
    <Style x:Key="CommandButton" TargetType="Button" BasedOn="{StaticResource RibbonButton}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="5"/>
        <Style.Triggers>
            <Trigger Property="Command" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>                     
        </Style.Triggers>
    </Style>
    
    <!--Кнопка закрытия модуля-->
    <Style x:Key="CloseModuleBtnStyle" TargetType="Button" BasedOn="{StaticResource RoundButton}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="1"/>
    </Style>

    <!--Диалоговое окно-->
    <Style TargetType="{x:Type Controls:Dialog}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8,3,8,8"/>
        <Setter Property="Background" Value="DarkOliveGreen"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Bold" Foreground="White"
                                       Margin="0,5"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ListBoxItemContainerStyleG1 с отступом 3-->
    <Style TargetType="ListBoxItem" x:Key="ListBoxItemContainerStyleG1">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <ContentPresenter Margin="3"/>
                        <Rectangle Stroke="Brown" Fill="Gold" 
                                       RadiusX="2" RadiusY="2" 
                                       Name="SelBorder" Visibility="Hidden"
                                       IsHitTestVisible="False">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" ice:Freeze="True">
                                    <GradientStop Offset="0" Color="#11000000"/>
                                    <GradientStop Offset="0.2" Color="#33000000"/>
                                    <GradientStop Offset="0.8" Color="#33000000"/>
                                    <GradientStop Offset="1" Color="#AA000000"/>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBoxItemContainerStyleG2 без отступа-->
    <Style TargetType="ListBoxItem" x:Key="ListBoxItemContainerStyleG2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <ContentPresenter Margin="0"/>
                        <Rectangle Stroke="Brown" Fill="Gold" 
                                               RadiusX="2" RadiusY="2" 
                                               Name="SelBorder" Visibility="Hidden">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" ice:Freeze="True">
                                    <GradientStop Offset="0" Color="#11000000"/>
                                    <GradientStop Offset="0.2" Color="#44000000"/>
                                    <GradientStop Offset="0.8" Color="#44000000"/>
                                    <GradientStop Offset="1" Color="#BB000000"/>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Default ToolTip-->
    <Style TargetType="ToolTip">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Firebrick"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="OliveDrab"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MaxWidth" Value="400"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboSelectedItemBorderBrush-->
    <LinearGradientBrush x:Key="ComboSelectedItemBorderBrush" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Offset="0" Color="#FF87CEFA"/>
        <GradientStop Offset="0.2" Color="#2A87CEFA"/>
        <GradientStop Offset="0.8" Color="#2A87CEFA"/>
        <GradientStop Offset="1" Color="#0087CEFA"/>
    </LinearGradientBrush>

    <!--ComboBoxItem MyComboBoxItemStyle-->
    <Style TargetType="ComboBoxItem" x:Key="MyComboBoxItemStyle">
        <Setter Property="Foreground" Value="RoyalBlue"/>
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"/>
                        <Border x:Name="HighLighter"
                                            CornerRadius="3" BorderBrush="RoyalBlue" BorderThickness="2"
                                            Background="{StaticResource ComboSelectedItemBorderBrush}"
                                            Visibility="Collapsed" IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="HighLighter" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="DarkBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Label ComboBox-->
    <ControlTemplate TargetType="{x:Type ComboBox}" x:Key="LabelComboBoxTemplate">
        <ControlTemplate.Resources>
            <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonTemplate">
                <Border Background="Transparent"
                        BorderThickness="0"
                        BorderBrush="{x:Null}">
                    <ContentPresenter Content="{TemplateBinding Content}" Focusable="False"/>
                </Border>
            </ControlTemplate>
        </ControlTemplate.Resources>
            <Grid Background="{TemplateBinding Background}">
                <Popup AllowsTransparency="true"
                       Name="PART_Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       Focusable="False"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">                     
                    <Border x:Name="DropDownBorder" 
                            MinWidth="{Binding ElementName=SelectedItemBorder,Path=ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle Name="OpaqueRect"
                                               Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                               Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                               Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border x:Name="SelectedItemBorder"
                        MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                        Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"                                                                      
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                                       
                                      Focusable="False"/>
                </Border>
            <TextBlock Foreground="Firebrick" Text="?" TextDecorations="underline" x:Name="ifnull" 
                       Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center"
                       FontSize="{TemplateBinding FontSize}"
                       Margin="{TemplateBinding Padding}"/>
            <ToggleButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Focusable="false"
                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"
                              Template="{StaticResource ToggleButtonTemplate}" x:Name="btn"/>
            </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter TargetName="ifnull" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="SelectedItemBorder" Property="BorderThickness" Value="0,0,0,1"/>
                <Setter TargetName="SelectedItemBorder" Property="BorderBrush" Value="Firebrick"/>-->
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false" >
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
            <Trigger SourceName="btn" Property="IsMouseOver" Value="True">
                <Setter TargetName="SelectedItemBorder" Property="TextElement.Foreground" Value="Firebrick"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--Стиль рамки итогов под гридами-->
    <Style TargetType="Border" x:Key="ItogsBorderStyle">
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="BorderBrush" Value="RoyalBlue"/>
        <Setter Property="BorderThickness" Value="1,3,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,2,2"/>
        <Setter Property="Padding" Value="2,1"/>
        <Setter Property="Margin" Value="1,0,1,1"/>
    </Style>
    
    <!--Стиль рамки элемента данных итогов-->
    <Style TargetType="Border" x:Key="ItogsItemBorderStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" ice:Freeze="True">
                <GradientStop Color="#55FFD700" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="LightSlateGray"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,2,2"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Margin" Value="5,0,0,0"/>        
    </Style>

    <!--GroupBox Style-->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}" x:Key="CheckedGroupBox">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3"
                                Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,1">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ActiveHeaderGroupBox Style-->
    <Style TargetType="{x:Type GroupBox}" x:Key="ActiveHeaderGroupBox">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" 
                                CornerRadius="3"
                                Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,1" CornerRadius="3">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--SimpleRadioButtonStyle-->
    <Style TargetType="ToggleButton" x:Key="SimpleRadioButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Padding="{TemplateBinding Padding}" 
                            Cursor="{TemplateBinding Cursor}"                             
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Grid Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
                                <Ellipse Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                <Ellipse x:Name="chkPath" Margin="3" Stretch="Fill" 
                                         Fill="{TemplateBinding Foreground}" Visibility="Hidden"/>
                            </Grid>
                            <ContentPresenter Margin="3,0,0,0"  ContentSource="Content" TextElement.Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="chkPath" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    
    <!--SimpleXCheckBoxStyle-->
    <Style TargetType="CheckBox" x:Key="SimpleXCheckBoxStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Padding="{TemplateBinding Padding}" Cursor="{TemplateBinding Cursor}" 
                            Margin="{TemplateBinding Margin}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Grid Margin="0,0,3,0"
                                  Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True"/>
                                <Path x:Name="chkPath" 
                                      Margin="3"
                                      Stretch="Fill" 
                                      Stroke="{TemplateBinding Foreground}" 
                                      StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}"
                                      Data="M0,0L1,1M1,0L0,1"
                                      Visibility="Hidden"
                                      SnapsToDevicePixels="True"/>
                            </Grid>
                            <ContentPresenter ContentSource="Content" TextElement.Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="True"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="chkPath" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="BorderThickness" Value="1">
                            <Setter TargetName="chkPath" Property="Margin" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>