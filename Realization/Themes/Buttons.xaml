<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="SharedBrushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="HoverModuleToolButtonBrush" StartPoint="0,1" EndPoint="0,0" >
        <GradientStop Color="RoyalBlue" Offset="0"/>
        <GradientStop Color="White" Offset=".7"/>
        <GradientStop Color="RoyalBlue" Offset="2"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NormalModuleToolButtonBrush" StartPoint="0,1" EndPoint="0,0" >
        <GradientStop Color="SlateBlue" Offset="0"/>
        <GradientStop Color="DeepSkyBlue" Offset=".6"/>
        <GradientStop Color="SlateBlue" Offset="1.5"/>
    </LinearGradientBrush>

    <!--PopDownButton-->
    <Style TargetType="{x:Type Button}" x:Key="PopDownButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid RenderTransformOrigin=".5,.5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <DoubleAnimation To="0" Duration="0:00:00.5" Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation To="1" Duration="0:00:00.2" Storyboard.TargetName="OverBorder" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation From="1" To="1.1" Duration="0:00:00.1" Storyboard.TargetName="OverContentTransform" Storyboard.TargetProperty="ScaleX" />
                                        <DoubleAnimation From="1" To="1.1" Duration="0:00:00.1" Storyboard.TargetName="OverContentTransform" Storyboard.TargetProperty="ScaleY" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:00:00.5" Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation To="1" Duration="0:00:00.3" Storyboard.TargetName="OverBorder" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation From="1.1" To=".9" Duration="0:00:00.1" Storyboard.TargetName="OverContentTransform" Storyboard.TargetProperty="ScaleX" />
                                        <DoubleAnimation From="1.1" To=".9" Duration="0:00:00.1" Storyboard.TargetName="OverContentTransform" Storyboard.TargetProperty="ScaleY" />

                                        <DoubleAnimation From=".7" To=".5" Duration="0:00:00.1" Storyboard.TargetName="OverBorder" 
                                                             Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"/>
                                        <DoubleAnimation To="0" Duration="0:00:00.1" Storyboard.TargetName="OverBorder" 
                                                             Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="OverContentTransform" />
                        </Grid.RenderTransform>

                        <Border Name="NormalBorder" CornerRadius="5" 
                                Background="{DynamicResource NormalModuleToolButtonBrush}" 
                                BorderBrush="SlateBlue" BorderThickness="1.5" Opacity="1"/>
                        <Border Name="OverBorder" CornerRadius="5" 
                                    Background="{DynamicResource HoverModuleToolButtonBrush}" 
                                    BorderBrush="RoyalBlue" BorderThickness="1"
                                    Opacity="0" RenderTransformOrigin=".5,.5">
                            <Border.Effect>
                                <DropShadowEffect Color="DarkSlateBlue" Opacity=".9" />
                            </Border.Effect>
                            <!--<Border.RenderTransform>
                                <ScaleTransform x:Name="OverBorderRotateTransform" />
                            </Border.RenderTransform>-->
                        </Border>

                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          RenderTransformOrigin=".5,.5">
                            <!--<ContentPresenter.RenderTransform>
                                <ScaleTransform x:Name="OverContentTransform" />
                            </ContentPresenter.RenderTransform>-->
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--RoundButton-->
    <Style TargetType="{x:Type Button}" x:Key="RoundButton">
        <Style.Resources>

            <!-- colors -->
            <LinearGradientBrush x:Key="roundButtonBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="Red" />
                <GradientStop Color="Yellow" Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="disabledRoundButtonBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#555" />
                <GradientStop Color="#CCC" Offset="1" />
            </LinearGradientBrush>

            <RadialGradientBrush x:Key="mouseOverRoundButtonBackground">
                <GradientStop Color="#FFF9F7A9" Offset="0" />
                <GradientStop Color="Yellow" Offset="0.2" />
                <GradientStop Color="Orange" Offset="0.7" />

                <GradientStop Color="Red" Offset="1" />
            </RadialGradientBrush>

            <LinearGradientBrush x:Key="glossShineBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#DDFFFFFF" Offset="0" />
                <GradientStop Color="#33FFFFFF" Offset="1" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="roundButtonStroke" Color="Red" />

            <SolidColorBrush x:Key="disabledRoundButtonStroke" Color="#333" />

            <DropShadowEffect x:Key="focusEffect" ShadowDepth="0" Color="Orange" BlurRadius="4"  />
            <DropShadowEffect x:Key="pressedEffect" ShadowDepth="0" Color="Red" BlurRadius="6"  />

        </Style.Resources>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="7*" />
                            <RowDefinition Height="7*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="bgEllipse" Grid.ColumnSpan="3" Grid.RowSpan="3" Fill="{StaticResource roundButtonBackground}" Stroke="{StaticResource roundButtonStroke}" />
                        <ContentPresenter Grid.RowSpan="3" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        <Ellipse x:Name="shine" Grid.Row="1" Grid.Column="1" Fill="{StaticResource glossShineBrush}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="bgEllipse" Property="Effect" Value="{StaticResource focusEffect}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="shine" Property="Opacity" Value="0.35" />
                            <Setter TargetName="bgEllipse" Property="Effect" Value="{StaticResource pressedEffect}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="bgEllipse" Property="StrokeThickness" Value="1.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bgEllipse" Property="Fill" Value="{StaticResource mouseOverRoundButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bgEllipse" Property="Fill" Value="{StaticResource disabledRoundButtonBackground}" />
                            <Setter TargetName="bgEllipse" Property="Stroke" Value="{StaticResource disabledRoundButtonStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RightArrowBtn-->
    <Style TargetType="Button" x:Key="RightArrowBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}" Cursor="Hand">
                        <Border Name="Border" Margin="2"
                                 BorderThickness="2" BorderBrush="Pink">
                            <Path Name="Path" Margin="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  StrokeThickness="2"
                                  Stroke="Pink"
                                  Data="M0,5L10,5M8,2L10,5L8,8Z">
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="Crimson" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Path"
                                                Storyboard.TargetProperty="Stroke.Color"
                                                To="Crimson" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="Pink" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Path"
                                                Storyboard.TargetProperty="Stroke.Color"
                                                To="Pink" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--LeftArrowBtn-->
    <Style TargetType="Button" x:Key="LeftArrowBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}" Cursor="Hand">
                        <Border Name="Border" Margin="2"
                                 BorderThickness="2" BorderBrush="Pink">
                            <Path Name="Path" Margin="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  StrokeThickness="2"
                                  Stroke="Pink"
                                  Data="M10,5L0,5M2,2L0,5L2,8Z">
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="Crimson" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Path"
                                                Storyboard.TargetProperty="Stroke.Color"
                                                To="Crimson" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="Pink" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetName="Path"
                                                Storyboard.TargetProperty="Stroke.Color"
                                                To="Pink" 
                                                Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RibbonButton-->
    <Style TargetType="{x:Type Button}" x:Key="RibbonButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource NormalForegroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            Name="border" CornerRadius="3" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                RecognizesAccessKey="True"
                                Content="{TemplateBinding ContentControl.Content}"/>
                        </Border>
                        <Border Name="disborder" CornerRadius="3" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource DisabledBorderBrush}" 
                                Background="{StaticResource DisabledBackgroundBrush}"
                                Visibility="Hidden"
                                Opacity=".7"/>
                    </Grid>                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}" />
                            <Setter TargetName="disborder" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопки внизу диалога (Submit, Cancel)-->
    <LinearGradientBrush x:Key="SubmitBackgroundBrush" StartPoint="0,0" EndPoint="0,1" PresentationOptions:Freeze="True">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFEE3"/>
            <GradientStop Offset="0.1" Color="#D1DFF0"/>
            <GradientStop Offset="0.1" Color="#204BCC13"/>
            <GradientStop Offset="1.0" Color="#AA4BCC13"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CancelBackgroundBrush" StartPoint="0,0" EndPoint="0,1" PresentationOptions:Freeze="True">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFEE3"/>
            <GradientStop Offset="0.1" Color="#D1DFF0"/>
            <GradientStop Offset="0.1" Color="#20DD3232"/>
            <GradientStop Offset="1.0" Color="#AADD3232"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <Style TargetType="{x:Type Button}" x:Key="DialogResultButton" BasedOn="{StaticResource RibbonButton}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Command" Value="{Binding}"/>
        <Style.Triggers>
            <Trigger Property="Command" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DialogSubmitButton" BasedOn="{StaticResource DialogResultButton}">
        <Setter Property="Background" Value="{StaticResource SubmitBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="DarkOliveGreen"/>
        <Setter Property="IsCancel" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="BorderBrush" Value="DarkOrange"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DialogCancelButton" BasedOn="{StaticResource DialogResultButton}">
        <Setter Property="Background" Value="{StaticResource CancelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Firebrick"/>
        <Setter Property="IsCancel" Value="True"/>
    </Style>    
    
    <!--ImageWithTextButton-->
    <Style x:Key="ImageWithTextButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="refl" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value=".5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Image" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6" Value=".1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="refl" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Image" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6" Value=".5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" 
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6" Value=".5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard3">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard4">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="contgrid" Margin="20,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--Рамка при наведении-->
                            <Border Opacity=".2" Margin="0"  Grid.RowSpan="2"
                                        x:Name="border"
                                        Background="AliceBlue" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>

                            <!--Подсветка при нажатии-->
                            <Border Background="SkyBlue" Opacity="0" Margin="2" 
                                        x:Name="border1" Grid.RowSpan="2">
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#AA000000" Offset="0"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>

                            <!--Надпись-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" 
                                          x:Name="contentPresenter"
                                          Opacity=".6"
                                          Margin="{TemplateBinding Padding}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          />

                            <!--Картинка-->
                            <Border Background="{TemplateBinding Background}" Opacity=".6"
                                        x:Name="Image" Margin="10,10,10,0"
                                        Width="50" Height="50"/>
                        </Grid>
    
                        <!--Отражение-->
                        <Border Grid.Row="1" Margin="0" x:Name="refl" Opacity="0" Height="100">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="#22000000" Offset="0.8"/>
                                    <GradientStop Color="#FF000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Resources>
                                <VisualBrush x:Key="ContentVisualBrush" Visual="{Binding ElementName=contgrid}" Stretch="None" AlignmentY="Bottom" AlignmentX="Right">
                                    <VisualBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <TranslateTransform Y="1.05"/>
                                            <SkewTransform CenterX="0" CenterY="0" AngleX="-5"/>
                                            <ScaleTransform ScaleY=".3"/>
                                        </TransformGroup>
                                    </VisualBrush.RelativeTransform>
                                </VisualBrush>
                            </Border.Resources>
                            <Border.Background>
                                <StaticResource ResourceKey="ContentVisualBrush"/>
                            </Border.Background>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard3_BeginStoryboard" 
                                                 Storyboard="{StaticResource Storyboard3}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard1" 
                                                 Storyboard="{StaticResource Storyboard4}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" 
                                                 Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" 
                                                 Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsCancel" Value="False"/>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Изображение на кнопке закрытия-->
    <Geometry x:Key="X_CloseButton">M0,0 L10,10 M0,10 L10,0</Geometry>

    <Color x:Key="TabItem_ForegroundColor_Base">#4971A3</Color>

    <!--Close button brushes-->
    <SolidColorBrush x:Key="CloseButtonNormalForegroundBrush"
                       Color="{StaticResource TabItem_ForegroundColor_Base}"/>
    <SolidColorBrush x:Key="CloseButtonHoverForegroundBrush"
                       Color="White"/>
    <SolidColorBrush x:Key="CloseButtonPressedForegroundBrush"
                       Color="#EEEE"/>
    <LinearGradientBrush x:Key="CloseButtonNormalBackgroundBrush" 
                           StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5FFF" Offset="0.0"/>
                <GradientStop Color="#5CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButtonNormalBorderBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5CCC" Offset="0.0"/>
                <GradientStop Color="#5444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButtonHoverBackgroundBrush" 
                           StartPoint="0,1" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFDF2B1E" Offset="0.0"/>
                <GradientStop Color="#FFA41F00" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButtonPressedBackgroundBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFA41F00" Offset="0.0"/>
                <GradientStop Color="#FFDF2B1E" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButtonPressedBorderBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5444" Offset="0.0"/>
                <GradientStop Color="#5CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--CloseButtonStyle-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="false"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" 
                          CornerRadius="2"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <!-- The Path below will render the button's X. -->
                            <Path x:Name="ButtonPath"
                              Margin="2"
                              Data="{StaticResource X_CloseButton}"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="2"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                            <!-- We don't really need the ContentPresenter, but what the heck ... -->
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource CloseButtonHoverBackgroundBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource CloseButtonPressedBackgroundBrush}" />
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource CloseButtonPressedBorderBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonPressedForegroundBrush}"/>
                            <Setter TargetName="ButtonPath" Property="Margin" Value="2.5,2.5,1.5,1.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка закрытия закладки-->
    <Style x:Key="TabCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CloseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource CloseButtonNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CloseButtonNormalBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource CloseButtonNormalForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <!--Простая кнопка-->
    <Style TargetType="Button" x:Key="SimpleTextButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="2" Name="BorderElement"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ColorAnimation Duration="0:0:.2" To="Firebrick" Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:.2" To="Gold" Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:.2" To="BlanchedAlmond" Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->                        
                        <ContentControl Name="ContentElement" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}" 
                                        FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BorderElement" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            <Setter TargetName="ContentElement" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
