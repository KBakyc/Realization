<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <SolidColorBrush x:Key="NormalCommandBackground" Color="RoyalBlue"/>
    <SolidColorBrush x:Key="HoverCommandBackground" Color="DarkOrange"/>
    <SolidColorBrush x:Key="NormalCommandForeground" Color="White"/>
    <SolidColorBrush x:Key="HoverCommandForeground" Color="GhostWhite"/>
    <!--<SolidColorBrush x:Key="PopupBackground" Color="LimeGreen"/>-->
    <LinearGradientBrush x:Key="PopupBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="LimeGreen"/>
        <GradientStop Offset="2" Color="Transparent"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderIndicatorBackground" Color="LimeGreen"/>
    <!--<LinearGradientBrush x:Key="HeaderIndicatorBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="Transparent"/>
        <GradientStop Offset="1" Color="LimeGreen"/>
    </LinearGradientBrush>-->
    
    <Style x:Key="TopCommandLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource NormalCommandForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <Style x:Key="SubCommandLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource NormalCommandForeground}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <DataTemplate x:Key="IconBoxTemplate">
        <Viewbox Width="50" Height="50" Margin="3">
            <ContentControl Focusable="False" Content="{Binding}"/>
        </Viewbox>
    </DataTemplate>

    <ControlTemplate x:Key="TopLevelHeaderTemplate" TargetType="{x:Type MenuItem}">
        <Grid x:Name="root" ToolTip="{Binding Label, Mode=OneTime}" ToolTipService.Placement="Bottom" ToolTipService.InitialShowDelay="0" Margin="5,2">
            <Border x:Name="Bd" CornerRadius="2" Background="{StaticResource NormalCommandBackground}"/>
            <Border x:Name="indicator" Background="{StaticResource HeaderIndicatorBackground}" Height="3" VerticalAlignment="Bottom"/>
            <StackPanel>
                <ContentControl x:Name="Icon" Content="{Binding Command}" Margin="5" Focusable="False" ContentTemplate="{StaticResource IconBoxTemplate}"/>
                <Border Width="110" MaxHeight="100"
                        x:Name="lblContainer">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Parent.ShellModel.IsShowCommandLabels}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock x:Name="lbl" Text="{Binding Label}" Style="{StaticResource TopCommandLabelStyle}"/>
                </Border>                
            </StackPanel>            
            <Border x:Name="overlay" Background="White" Opacity=".5" Visibility="Hidden"/>
            <Popup x:Name="PART_Popup"
                                           AllowsTransparency="true"
                                           Placement="Bottom"
                                           HorizontalOffset="0" VerticalOffset="3"                   
                                           IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                           Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Border Background="{StaticResource PopupBackground}"
                                                BorderBrush="{StaticResource NormalCommandBackground}" BorderThickness="0" CornerRadius="0,5,5,5" Padding="0,2,0,5">
                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle" 
                                                                        Grid.IsSharedSizeScope="true"/>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="lblContainer" Property="Visibility" Value="Visible">
                <Setter TargetName="root" Property="Margin" Value="2"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverCommandBackground}"/>
                <Setter TargetName="lbl" Property="Foreground" Value="{StaticResource HoverCommandForeground}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="root" Property="ToolTip" Value="{x:Null}"/>
                <Setter TargetName="indicator" Property="Margin" Value="0,0,0,-3"/>
                <Setter TargetName="indicator" Property="Height" Value="6"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="overlay" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="TopLevelItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid x:Name="root" Background="Transparent" ToolTip="{Binding Label, Mode=OneTime}" ToolTipService.Placement="Bottom" ToolTipService.InitialShowDelay="0" Margin="5,2">
            <Border x:Name="Bd" CornerRadius="2" Background="{StaticResource NormalCommandBackground}"/>
            <StackPanel>
                <ContentControl x:Name="Icon" Content="{Binding Command, Mode=OneTime}" Margin="5" Focusable="False" ContentTemplate="{StaticResource IconBoxTemplate}"/>
                <Border Width="110" MaxHeight="100" x:Name="lblContainer">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Parent.ShellModel.IsShowCommandLabels}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock x:Name="lbl" Text="{Binding Label, Mode=OneTime}" Style="{StaticResource TopCommandLabelStyle}"/>
                </Border>
            </StackPanel>
            <Border x:Name="overlay" Background="White" Opacity=".5" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="lblContainer" Property="Visibility" Value="Visible">
                <Setter TargetName="root" Property="Margin" Value="2"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverCommandBackground}"/>
                <Setter TargetName="lbl" Property="Foreground" Value="{StaticResource HoverCommandForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="overlay" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid>
            <Border Name="Bd" CornerRadius="2" Margin="0,2" Background="{StaticResource NormalCommandBackground}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemColumnGroup"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding Command, Mode=OneTime}" VerticalAlignment="Center" HorizontalAlignment="Left" Focusable="False" Margin="3"/>
                    <TextBlock x:Name="lbl" Text="{Binding Label, Mode=OneTime}" Style="{StaticResource SubCommandLabelStyle}" Grid.Column="1"/>
                </Grid>
            </Border>
            <Border x:Name="overlay" Background="White" Opacity=".5" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverCommandBackground}"/>
                <Setter TargetName="lbl" Property="Foreground" Value="{StaticResource HoverCommandForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="overlay" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ModuleMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Command" Value="{Binding Command, Mode=OneTime}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource SubmenuItemTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelItemTemplate}"/>
            </Trigger>
            <!--<Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplate}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>